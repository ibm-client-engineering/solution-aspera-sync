"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[844],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(y,o(o({ref:t},u),{},{components:r})):n.createElement(y,o({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1560:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(4137));const i={id:"solution-prepare",sidebar_position:1,title:"Prepare"},o=void 0,l={unversionedId:"Create/solution-prepare",id:"Create/solution-prepare",title:"Prepare",description:"Pre-Requisites",source:"@site/docs/3-Create/Prepare.md",sourceDirName:"3-Create",slug:"/Create/solution-prepare",permalink:"/solution-aspera-sync/Create/solution-prepare",draft:!1,editUrl:"https://github.com/ibm-client-engineering/solution-aspera-sync/tree/main/packages/create-docusaurus/templates/shared/docs/3-Create/Prepare.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"solution-prepare",sidebar_position:1,title:"Prepare"},sidebar:"tutorialSidebar",previous:{title:"Create",permalink:"/solution-aspera-sync/category/create"},next:{title:"Deploy",permalink:"/solution-aspera-sync/Create/solution-deploy"}},s={},p=[{value:"Pre-Requisites",id:"pre-requisites",level:2},{value:"Optional: Running Solution locally using Virtual Machines, Vagrant",id:"optional-running-solution-locally-using-virtual-machines-vagrant",level:2},{value:"Update the playbook configurations as needed to suit your environment",id:"update-the-playbook-configurations-as-needed-to-suit-your-environment",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"pre-requisites"},"Pre-Requisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2 ",(0,a.kt)("strong",{parentName:"li"},"reachable hosts")," that the servers will run on"),(0,a.kt)("li",{parentName:"ul"},"2 ",(0,a.kt)("strong",{parentName:"li"},"Aspera License")," with sync for each server",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"/resources/ansible/roles/configure-aspera/files/",(0,a.kt)("inlineCode",{parentName:"li"},"AsperaEnterprise-license-primary")),(0,a.kt)("li",{parentName:"ul"},"/resources/ansible/roles/configure-aspera/files/",(0,a.kt)("inlineCode",{parentName:"li"},"AsperaEnterprise-license-secondary")))),(0,a.kt)("li",{parentName:"ul"},"An install of ",(0,a.kt)("inlineCode",{parentName:"li"},"ibm-aspera-hsts")," binary to be installed for the servers",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"/resources/ansible/roles/install-aspera/files/",(0,a.kt)("inlineCode",{parentName:"li"},"ibm-aspera-hsts-4.4.2.550-linux-64-release.deb"))))),(0,a.kt)("h2",{id:"optional-running-solution-locally-using-virtual-machines-vagrant"},"Optional: Running Solution locally using Virtual Machines, Vagrant"),(0,a.kt)("p",null,"You are able to create the provided solution locally using ",(0,a.kt)("inlineCode",{parentName:"p"},"VMs"),". HashiCorp Vagrant is used to simplify this step, run the following command below within the vagrant directory to provision ",(0,a.kt)("inlineCode",{parentName:"p"},"2 virtual machines"),". Assuming Vagrant is installed and configured properly."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"hosts public key are required to be in the vagrant directory and called ",(0,a.kt)("inlineCode",{parentName:"li"},"id_rsa.pub"),". This will allow you to ssh into the provisioned machines.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"vagrant up\n")),(0,a.kt)("h2",{id:"update-the-playbook-configurations-as-needed-to-suit-your-environment"},"Update the playbook configurations as needed to suit your environment"))}d.isMDXComponent=!0}}]);